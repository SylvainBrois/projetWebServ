package com.example.projetwebserv.features.beer.dao.entity
import com.example.projetwebserv.features.brewery.dao.entity.Brewery;
import com.fasterxml.jackson.annotation.JsonIgnore
import io.swagger.v3.oas.annotations.media.Schema
import jakarta.persistence.*

@Schema(description = "Model for a beer and its attributes")
@Entity
data class Beer(
        @field:Schema(
                description = "Autogenerated value to identify a beer",
                example = "20",
                type = "int",
                minimum = "0",
                maximum = "unlimited"
        )
        @Id
        @GeneratedValue(strategy = GenerationType.IDENTITY)
        val id: Long = 0,
        @field:Schema(
                description = "Abv of a beer",
                example = "0.2",
                type = "float",
                minimum = "0",
                maximum = "unlimited"
        )
        val abv: Float = 0.0f,
        @field:Schema(
                description = "Ibu of a beer, can be null",
                example = "0.2",
                type = "float?",
                minimum = "0",
                maximum = "unlimited"
        )
        val ibu: Float? = 0.0f,
        @field:Schema(
                description = "Name of a beer",
                example = "Pelforth",
                type = "String"
        )
        val name: String = "",
        @field:Schema(
                description = "Style of a beer",
                example = "Blonde",
                type = "String"
        )
        val style: String= "",

        @field:Schema(
                description = "Id of the brewery who created the current beer",
                example = "23",
                type = "Int",
                minimum = "0",
                maximum = "unlimited"
        )
        @ManyToOne(fetch = FetchType.LAZY, optional = false)
        @JsonIgnore
        @JoinColumn(name = "brewery_id")
        val _brewery: Brewery? = null,
        @field:Schema(
                description = "Ounces of a beer",
                example = "12.3",
                type = "float",
                minimum = "0",
                maximum = "unlimited"
        )
        val ounces: Float = 0.0f
){
    val brewery get() = _brewery?.id
}


   
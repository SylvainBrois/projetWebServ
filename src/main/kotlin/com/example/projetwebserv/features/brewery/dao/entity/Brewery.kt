package com.example.projetwebserv.features.brewery.dao.entity

import com.example.projetwebserv.features.beer.dao.entity.Beer
import com.fasterxml.jackson.annotation.JsonBackReference
import io.swagger.v3.oas.annotations.media.Schema
import jakarta.persistence.*
import kotlinx.serialization.Serializable

@Schema(description = "Model for a brewery and its attributes")
@Entity
@Serializable
data class Brewery(
    @field:Schema(
        description = "Autogenerated value to identify a brewery",
        example = "20",
        type = "int",
        minimum = "0",
        maximum = "unlimited"
    )
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    val id: Long = 0,
    @field:Schema(
        description = "Name of a brewery",
        example = "The Best Brewery",
        type = "String",
    )
    val name : String = "",
    @field:Schema(
        description = "City where a brewery is located",
        example = "New York",
        type = "String",
    )
    val city : String = "",
    @field:Schema(
        description = "State of a brewery",
        example = "MN",
        type = "String",
    )
    val state : String = "",
    @OneToMany(cascade = [(CascadeType.ALL)], fetch = FetchType.LAZY, mappedBy = "_brewery")
    @field:Schema(
        description = "List of the beers proposed by a brewery",
        example = "Beer1, Beer2...",
        type = "MutableList<Beer>"
    )
    val beers: MutableList<Beer> = mutableListOf<Beer>()
)